From 6fe24945cf44682b295219eb54a6ba518c0cf248 Mon Sep 17 00:00:00 2001
From: Mark Harfouche <mark.harfouche@gmail.com>
Date: Tue, 18 Mar 2025 21:04:10 -0400
Subject: [PATCH 3/3] Update CMake file to use FindPython

---
 CMakeLists.txt                    |  3 +-
 cmake/modules/FindNUMPY.cmake     | 93 -------------------------------
 cmake/modules/FindVIGRA.cmake     | 30 ----------
 cmake/modules/PythonLibTest.cmake | 22 ++++----
 src/python/CMakeLists.txt         |  8 +--
 src/python/test/CMakeLists.txt    | 20 +++----
 6 files changed, 27 insertions(+), 149 deletions(-)
 delete mode 100644 cmake/modules/FindNUMPY.cmake
 delete mode 100644 cmake/modules/FindVIGRA.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5ee6757a..1e6985d4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,6 +3,7 @@ set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
 
 project(NIFTY)
 set(${PROJECT_NAME}_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
+cmake_policy(SET CMP0057 NEW)
 
 
 
@@ -157,7 +158,7 @@ endif()
 #-------------------------------------------------------------------------------------------------------------------
 # find boost
 #-------------------------------------------------------------------------------------------------------------------
-find_package(Boost 1.63.0 REQUIRED)
+find_package(Boost 1.63.0 CONFIG REQUIRED)
 
 # see this issue for discussions about the filesystem lib in CMake
 # https://gitlab.kitware.com/cmake/cmake/issues/17834
diff --git a/cmake/modules/FindNUMPY.cmake b/cmake/modules/FindNUMPY.cmake
deleted file mode 100644
index a719c742..00000000
--- a/cmake/modules/FindNUMPY.cmake
+++ /dev/null
@@ -1,93 +0,0 @@
-# - Find the NumPy libraries
-# This module finds if NumPy is installed, and sets the following variables
-# indicating where it is.
-#
-# TODO: Update to provide the libraries and paths for linking npymath lib.
-#
-#  NUMPY_FOUND               - was NumPy found
-#  NUMPY_VERSION             - the version of NumPy found as a string
-#  NUMPY_VERSION_MAJOR       - the major version number of NumPy
-#  NUMPY_VERSION_MINOR       - the minor version number of NumPy
-#  NUMPY_VERSION_PATCH       - the patch version number of NumPy
-#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601
-#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files
-
-#============================================================================
-# Copyright 2012 Continuum Analytics, Inc.
-#
-# MIT License
-#
-# Permission is hereby granted, free of charge, to any person obtaining
-# a copy of this software and associated documentation files
-# (the "Software"), to deal in the Software without restriction, including
-# without limitation the rights to use, copy, modify, merge, publish,
-# distribute, sublicense, and/or sell copies of the Software, and to permit
-# persons to whom the Software is furnished to do so, subject to
-# the following conditions:
-# 
-# The above copyright notice and this permission notice shall be included
-# in all copies or substantial portions of the Software.
-# 
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
-# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
-# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
-# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
-# OTHER DEALINGS IN THE SOFTWARE.
-# 
-#============================================================================
-
-# Finding NumPy involves calling the Python interpreter,
-# if we have PYTHON_EXECUTABLE found already, we don't need to
-# check for it a second time, this might lead to version conflicts!
-if(NOT DEFINED PYTHON_EXECUTABLE OR PYTHON_EXECUTABLE MATCHES "^$")
-    if(NumPy_FIND_REQUIRED)
-        find_package(PythonInterp REQUIRED)
-    else()
-        find_package(PythonInterp)
-    endif()
-    
-    if(NOT PYTHONINTERP_FOUND)
-        set(NUMPY_FOUND FALSE)
-    endif()
-endif()
-
-execute_process(COMMAND "${PYTHON_EXECUTABLE}" "-c"
-    "import numpy as n; print(n.__version__); print(n.get_include());"
-    RESULT_VARIABLE _NUMPY_SEARCH_SUCCESS
-    OUTPUT_VARIABLE _NUMPY_VALUES
-    ERROR_VARIABLE _NUMPY_ERROR_VALUE
-    OUTPUT_STRIP_TRAILING_WHITESPACE)
-
-if(NOT _NUMPY_SEARCH_SUCCESS MATCHES 0)
-    if(NumPy_FIND_REQUIRED)
-        message(FATAL_ERROR
-            "NumPy import failure:\n${_NUMPY_ERROR_VALUE}")
-    endif()
-    set(NUMPY_FOUND FALSE)
-endif()
-
-# Convert the process output into a list
-string(REGEX REPLACE ";" "\\\\;" _NUMPY_VALUES ${_NUMPY_VALUES})
-string(REGEX REPLACE "\n" ";" _NUMPY_VALUES ${_NUMPY_VALUES})
-list(GET _NUMPY_VALUES 0 NUMPY_VERSION)
-list(GET _NUMPY_VALUES 1 NUMPY_INCLUDE_DIRS)
-
-# Make sure all directory separators are '/'
-string(REGEX REPLACE "\\\\" "/" NUMPY_INCLUDE_DIRS ${NUMPY_INCLUDE_DIRS})
-
-# Get the major and minor version numbers
-string(REGEX REPLACE "\\." ";" _NUMPY_VERSION_LIST ${NUMPY_VERSION})
-list(GET _NUMPY_VERSION_LIST 0 NUMPY_VERSION_MAJOR)
-list(GET _NUMPY_VERSION_LIST 1 NUMPY_VERSION_MINOR)
-list(GET _NUMPY_VERSION_LIST 2 NUMPY_VERSION_PATCH)
-string(REGEX MATCH "[0-9]*" NUMPY_VERSION_PATCH ${NUMPY_VERSION_PATCH})
-math(EXPR NUMPY_VERSION_DECIMAL
-    "(${NUMPY_VERSION_MAJOR} * 10000) + (${NUMPY_VERSION_MINOR} * 100) + ${NUMPY_VERSION_PATCH}")
-
-find_package_message(NUMPY
-    "Found NumPy: version \"${NUMPY_VERSION}\" ${NUMPY_INCLUDE_DIRS}"
-    "${NUMPY_INCLUDE_DIRS}${NUMPY_VERSION}")
-
-set(NUMPY_FOUND TRUE)
diff --git a/cmake/modules/FindVIGRA.cmake b/cmake/modules/FindVIGRA.cmake
deleted file mode 100644
index 7176ea6e..00000000
--- a/cmake/modules/FindVIGRA.cmake
+++ /dev/null
@@ -1,30 +0,0 @@
-# This module finds an installed Vigra package.
-#
-# It sets the following variables:
-#  VIGRA_FOUND              - Set to false, or undefined, if vigra isn't found.
-#  VIGRA_INCLUDE_DIR        - Vigra include directory.
-#  VIGRA_IMPEX_LIBRARY      - Vigra's impex library
-#  VIGRA_IMPEX_LIBRARY_DIR  - path to Vigra impex library
-#  VIGRA_NUMPY_CORE_LIBRARY - Vigra's vigranumpycore library
-
-# configVersion.hxx only present, after build of Vigra
-FIND_PATH(VIGRA_INCLUDE_DIR vigra/configVersion.hxx PATHS $ENV{VIGRA_ROOT}/include ENV CPLUS_INCLUDE_PATH)
-FIND_LIBRARY(VIGRA_IMPEX_LIBRARY vigraimpex PATHS $ENV{VIGRA_ROOT}/src/impex $ENV{VIGRA_ROOT}/lib ENV LD_LIBRARY_PATH ENV LIBRARY_PATH)
-GET_FILENAME_COMPONENT(VIGRA_IMPEX_LIBRARY_PATH ${VIGRA_IMPEX_LIBRARY} PATH)
-SET( VIGRA_IMPEX_LIBRARY_DIR ${VIGRA_IMPEX_LIBRARY_PATH} CACHE PATH "Path to Vigra impex library.")
-
-EXECUTE_PROCESS ( COMMAND python -c "from distutils.sysconfig import get_python_lib; print get_python_lib()" OUTPUT_VARIABLE PYTHON_SITE_PACKAGES OUTPUT_STRIP_TRAILING_WHITESPACE)
-FIND_FILE(VIGRA_NUMPY_CORE_LIBRARY 
-          NAMES vigranumpycore.so vigranumpycore.pyd
-          PATHS ${PYTHON_SITE_PACKAGES} 
-                ENV PYTHONPATH
-                ${CMAKE_PREFIX_PATH}/python/Lib/site-packages # Windows, buildem system
-          PATH_SUFFIXES vigra)
-
-
-# handle the QUIETLY and REQUIRED arguments and set VIGRA_FOUND to TRUE if 
-# all listed variables are TRUE
-INCLUDE(FindPackageHandleStandardArgs)
-FIND_PACKAGE_HANDLE_STANDARD_ARGS(VIGRA DEFAULT_MSG VIGRA_IMPEX_LIBRARY VIGRA_INCLUDE_DIR VIGRA_NUMPY_CORE_LIBRARY)
-
-MARK_AS_ADVANCED( VIGRA_INCLUDE_DIR VIGRA_IMPEX_LIBRARY VIGRA_IMPEX_LIBRARY_DIR VIGRA_NUMPY_CORE_LIBRARY)
diff --git a/cmake/modules/PythonLibTest.cmake b/cmake/modules/PythonLibTest.cmake
index 7eaa72e4..42f503a0 100644
--- a/cmake/modules/PythonLibTest.cmake
+++ b/cmake/modules/PythonLibTest.cmake
@@ -1,19 +1,19 @@
 
-#message(PYTHON_VERSION_MAJOR ${PYTHON_VERSION_MAJOR})
-if(PYTHON_VERSION_MAJOR STREQUAL "2")
+#message(Python_VERSION_MAJOR ${Python_VERSION_MAJOR})
+if(Python_VERSION_MAJOR STREQUAL "2")
     #message(STATUS "222222")
     find_program(NOSETESTS_PATH NAMES
-            #"nosetests${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}"
-            #"nosetests-${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}"
-            #"nosetests${PYTHON_VERSION_MAJOR}"
-            #"nosetests-${PYTHON_VERSION_MAJOR}"
+            #"nosetests${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+            #"nosetests-${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+            #"nosetests${Python_VERSION_MAJOR}"
+            #"nosetests-${Python_VERSION_MAJOR}"
             "nosetests")
 else()
     find_program(NOSETESTS_PATH NAMES
-        #"nosetests${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}"
-        #"nosetests-${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}"
-        #"nosetests${PYTHON_VERSION_MAJOR}"
-        #"nosetests-${PYTHON_VERSION_MAJOR}"
+        #"nosetests${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+        #"nosetests-${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+        #"nosetests${Python_VERSION_MAJOR}"
+        #"nosetests-${Python_VERSION_MAJOR}"
         "nosetests3")
 endif()
 
@@ -101,4 +101,4 @@ function(add_python_test_target TARGET_NAME)
     add_dependencies(${TARGET_NAME} ${COPY_TARGET})
 
 
-endfunction()
\ No newline at end of file
+endfunction()
diff --git a/src/python/CMakeLists.txt b/src/python/CMakeLists.txt
index 47fbb453..b4096768 100644
--- a/src/python/CMakeLists.txt
+++ b/src/python/CMakeLists.txt
@@ -1,7 +1,10 @@
+find_package(Python REQUIRED COMPONENTS NumPy Interpreter Development)
+include_directories(${Python_NumPy_INCLUDE_DIRS})
+
 find_package(xtensor-python REQUIRED)
 include_directories(${xtensor-python_INCLUDE_DIRS})
 
-find_package(pybind11 REQUIRED)
+find_package(pybind11 CONFIG REQUIRED)
 include_directories(${pybind11_INCLUDE_DIRS})
 
 if(MSVC)
@@ -11,9 +14,6 @@ else()
 endif()
 message(STATUS "Using c++ 17 for pybind")
 
-find_package(Python REQUIRED COMPONENTS NumPy)
-include_directories(${Python_NumPy_INCLUDE_DIRS})
-
 add_subdirectory(test)
 add_subdirectory(lib)
 
diff --git a/src/python/test/CMakeLists.txt b/src/python/test/CMakeLists.txt
index b6e27aa3..dd6fae3a 100644
--- a/src/python/test/CMakeLists.txt
+++ b/src/python/test/CMakeLists.txt
@@ -1,19 +1,19 @@
 if(BUILD_PYTHON_TEST)
 
-    if(PYTHON_VERSION_MAJOR STREQUAL "2")
+    if(Python_VERSION_MAJOR STREQUAL "2")
         #message(STATUS "222222")
         find_program(NOSETESTS_PATH NAMES
-                #"nosetests${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}"
-                #"nosetests-${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}"
-                #"nosetests${PYTHON_VERSION_MAJOR}"
-                #"nosetests-${PYTHON_VERSION_MAJOR}"
+                #"nosetests${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+                #"nosetests-${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+                #"nosetests${Python_VERSION_MAJOR}"
+                #"nosetests-${Python_VERSION_MAJOR}"
                 "nosetests")
     else()
         find_program(NOSETESTS_PATH NAMES
-            #"nosetests${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}"
-            #"nosetests-${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}"
-            #"nosetests${PYTHON_VERSION_MAJOR}"
-            #"nosetests-${PYTHON_VERSION_MAJOR}"
+            #"nosetests${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+            #"nosetests-${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+            #"nosetests${Python_VERSION_MAJOR}"
+            #"nosetests-${Python_VERSION_MAJOR}"
             "nosetests3")
     endif()
 
@@ -56,4 +56,4 @@ endif()
 
 
 
-endif()
\ No newline at end of file
+endif()
-- 
2.43.0

